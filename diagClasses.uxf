<diagram program="umletino" version="15.1"><zoom_level>5</zoom_level><help_text></help_text><element><id>UMLClass</id><coordinates><x>370</x><y>55</y><w>105</w><h>95</h></coordinates><panel_attributes>Package::wargame

Interface : IConfig
(Paramètres principaux du jeu)
--

--

--</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>405</x><y>295</y><w>105</w><h>65</h></coordinates><panel_attributes>Package::wargame

Interface : ICarte
(Méthode de Carte)
--

--

--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>720</x><y>670</y><w>105</w><h>95</h></coordinates><panel_attributes>Package::wargame

Interface : ISoldat
(Méthode de Soldat)
--

--

--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>385</x><y>430</y><w>150</w><h>180</h></coordinates><panel_attributes>Package::wargame

Classe : Carte
(Gère la carte et les éléments qui y figurent)
--
-tab : Element[][]
-hauteur : int
-largeur : int
--
+Carte(hauteur, largeur)
+getJeu()
+setJeu(jeu)
+afficherCarteConsole()
+getElement(pos)
+getElement(x,y)
+Position trouvePositionVide()
+Position trouvePositionVide(Position pos)
+Heros trouveHeros()
+Heros trouveHeros(Position pos)
+boolean deplaceSoldat(Position pos, Soldat soldat) 
+void mort(Soldat perso) 
+boolean actionHeros(Position pos, Position pos2)
+void jouerSoldats(PanneauJeu pj) 
+void toutDessiner(Graphics g) 
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>600</x><y>485</y><w>125</w><h>125</h></coordinates><panel_attributes>Package::wargame

Classe : Position
(Gère la position d'un élément sur la carte)
--
-x : int
-y : int
--
+Position(int x, int y) 
+int getX() 
+int getY() 
+void setX(int x) 
+void setY(int y) 
+boolean estValide()
+String toString()
+boolean estVoisine(Position pos) 

--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>400</x><y>680</y><w>105</w><h>110</h></coordinates><panel_attributes>Package::wargame

Classe : Element
--
-boolean estVisible;
-String nom; (peut être à enlever ?)
-Position pos;
--
+Element()
+boolean EstVisible() 
+void setEstVisible(boolean estVisible)
+String getNom()
+void setNom(String nom)
+Position getPos()
+void setPos(Position pos)
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>555</x><y>740</y><w>105</w><h>140</h></coordinates><panel_attributes>Package::wargame

Classe : Soldat
--
-POINTS_DE_VIE_MAX : int 
-PUISSANCE : int 
-TIR : int 
-PORTEE_VISUELLE : int
-pointsDeVie : int
-carte : Carte
-pos : Position 
--
+Soldat(Carte carte, int pts, int portee, int puiss, int tir, Position pos)
+int getPoints()
+int getTour() 
+int getPortee()
+void joueTour(int tour)
+void combat(Soldat soldat)
+void seDeplace(Position newPos)
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>750</x><y>995</y><w>175</w><h>95</h></coordinates><panel_attributes>Package::wargame

Classe : Heros
--
-NOM : String
-TYPE : TypesH 
--	
+Heros(Carte carte, TypesH type, String nom, Position pos)
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>535</x><y>995</y><w>180</w><h>95</h></coordinates><panel_attributes>Package::wargame

Classe : Monstre
--
-NOM : String
-TYPE : TypesM
--
+Monstre(Carte carte, TypesM type, String nom, Position pos)
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>395</x><y>880</y><w>130</w><h>95</h></coordinates><panel_attributes>Package::wargame

Classe : Obstacle
--
+enum TypeObstacle
        -COULEUR : Color
        TypeObstacle(Color couleur)
        +static TypeObstacle getObstacleAlea()

-TYPE : TypeObstacle 
--
Obstacle(TypeObstacle type, Position pos)
+String toString()
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>190</x><y>690</y><w>105</w><h>95</h></coordinates><panel_attributes>Package::wargame

Classe : PanneauJeu
(gère l'affichage de la carte)
--

--

--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>690</y><w>180</w><h>95</h></coordinates><panel_attributes>Package::wargame

Classe : FenetreJeu
(contient le main et affiche la carte et d'autres informations)
--

--

--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>755</x><y>80</y><w>315</w><h>70</h></coordinates><panel_attributes>fontsize=19

Squelette des trois interface et des classes Position et Obstacle dans :

POO L3 -&gt; Projet -&gt; wargame.zip</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>600</x><y>705</y><w>130</w><h>45</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>240;10;10;10;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>460</x><y>355</y><w>15</w><h>85</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;150</additional_attributes></element><element><id>Relation</id><coordinates><x>450</x><y>605</y><w>15</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;100</additional_attributes></element><element><id>Relation</id><coordinates><x>450</x><y>650</y><w>15</w><h>40</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;60;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>110</x><y>145</y><w>325</w><h>555</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>630;10;630;200;10;200;10;1090</additional_attributes></element><element><id>Relation</id><coordinates><x>485</x><y>605</y><w>175</w><h>85</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;150;10;90;330;90;330;10</additional_attributes></element><element><id>Relation</id><coordinates><x>420</x><y>240</y><w>215</w><h>255</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;10;410;10;410;490</additional_attributes></element><element><id>UMLClass</id><coordinates><x>260</x><y>880</y><w>105</w><h>95</h></coordinates><panel_attributes>Package::wargame

Classe : Plaine
--

--

--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>585</x><y>875</y><w>15</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;240</additional_attributes></element><element><id>Relation</id><coordinates><x>585</x><y>915</y><w>220</w><h>90</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;420;10;420;160</additional_attributes></element><element><id>Relation</id><coordinates><x>450</x><y>785</y><w>15</w><h>105</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;190</additional_attributes></element><element><id>Relation</id><coordinates><x>450</x><y>815</y><w>115</w><h>15</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;210;10</additional_attributes></element><element><id>Relation</id><coordinates><x>315</x><y>815</y><w>150</w><h>75</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;130;10;10;280;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>755</x><y>215</y><w>320</w><h>210</h></coordinates><panel_attributes>fontsize=19

A faire :
- Gestion de l'affichage du jeu (biblio graphique | classe PanneauJeu)
- Toutes les fonctions prédéfinies mais non remplies 
(dans Element, Soldat et Carte)
- Gestion de l'apparition des éléments au début du jeu
(Aléatoires controlés :
- Apparition Héros / Monstres
- Rivières continues
- Obstacles non bloquants )

- Ajout/Reflexion des ajouts :
( Element sur le plateau (village, volcan, chateau, ...)
  Classe d'unité gentil : Mage, Paladin, Voleur, ...
                       méchant : Chaman, Nécromancien, Traitres, ...
  Espèce/race gentil : chien de chasse, draconien, Homme-Poisson, 
                                    Homme-lézard, ...
                   méchant : Gnoll, Slime, Squelette (archer/épéiste), Boss)</panel_attributes><additional_attributes></additional_attributes></element></diagram>